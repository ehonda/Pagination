namespace Deprecated.OffsetBased.PageRequestGenerationHandling;

/// <inheritdoc />
/// <remarks>
/// Page requests are generated by cloning an initial request for each page.
/// </remarks>
[PublicAPI]
public class PageRequestGeneratorViaInitialRequest : PageRequestGeneratorViaRequestFactory
{
    /// <summary>
    /// Initializes a new instance of the <see cref="PageRequestGeneratorViaInitialRequest"/> class. 
    /// </summary>
    /// <param name="initialRequest">The initial request to clone for each page.</param>
    /// <param name="paginationParametersConfiguration">The configuration for the pagination parameters.</param>
    public PageRequestGeneratorViaInitialRequest(
        HttpRequestMessage initialRequest,
        PaginationParametersConfiguration paginationParametersConfiguration)
        : base(() => CloneRequest(initialRequest), paginationParametersConfiguration)
    {
    }

    private static HttpRequestMessage CloneRequest(HttpRequestMessage request)
    {
        if (request.Method != HttpMethod.Get)
        {
            throw new ArgumentException("Only HTTP GET requests can be cloned.");
        }

        var clone = new HttpRequestMessage(request.Method, request.RequestUri) { Version = request.Version };

        foreach (var (key, value) in request.Options)
        {
            clone.Options.Set(new(key), value);
        }

        foreach (var (key, value) in request.Headers)
        {
            clone.Headers.TryAddWithoutValidation(key, value);
        }

        return clone;
    }
}
